/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isValidSequence(TreeNode* root, vector<int>& arr) {
        return util(root, arr, 0);
    }
    
    bool util(TreeNode *root , vector<int> arr, int i){
        if(i==arr.size() || root==NULL) return false;
        if((root->val == arr[i]) && (i == arr.size()-1) && 
           root->left == NULL && root->right == NULL) return true; 
        return ( arr[i] == root->val && (util(root->left,arr,i+1) || util(root->right,arr, i+1)));
        
    }
};
